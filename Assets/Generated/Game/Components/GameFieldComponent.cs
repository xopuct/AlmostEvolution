//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity fieldEntity { get { return GetGroup(GameMatcher.Field).GetSingleEntity(); } }
    public FieldComponent field { get { return fieldEntity.field; } }
    public bool hasField { get { return fieldEntity != null; } }

    public GameEntity SetField(int newWidth, int newHeight) {
        if(hasField) {
            throw new Entitas.EntitasException("Could not set Field!\n" + this + " already has an entity with FieldComponent!",
                "You should check if the context already has a fieldEntity before setting it or use context.ReplaceField().");
        }
        var entity = CreateEntity();
        entity.AddField(newWidth, newHeight);
        return entity;
    }

    public void ReplaceField(int newWidth, int newHeight) {
        var entity = fieldEntity;
        if(entity == null) {
            entity = SetField(newWidth, newHeight);
        } else {
            entity.ReplaceField(newWidth, newHeight);
        }
    }

    public void RemoveField() {
        DestroyEntity(fieldEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FieldComponent field { get { return (FieldComponent)GetComponent(GameComponentsLookup.Field); } }
    public bool hasField { get { return HasComponent(GameComponentsLookup.Field); } }

    public void AddField(int newWidth, int newHeight) {
        var index = GameComponentsLookup.Field;
        var component = CreateComponent<FieldComponent>(index);
        component.Width = newWidth;
        component.Height = newHeight;
        AddComponent(index, component);
    }

    public void ReplaceField(int newWidth, int newHeight) {
        var index = GameComponentsLookup.Field;
        var component = CreateComponent<FieldComponent>(index);
        component.Width = newWidth;
        component.Height = newHeight;
        ReplaceComponent(index, component);
    }

    public void RemoveField() {
        RemoveComponent(GameComponentsLookup.Field);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherField;

    public static Entitas.IMatcher<GameEntity> Field {
        get {
            if(_matcherField == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Field);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherField = matcher;
            }

            return _matcherField;
        }
    }
}
